---
import "@/scss/styles.scss";
import { Image } from "astro:assets";
import logo from "./images/logo.png";
import x from "./images/x.png";
import instagram from "./images/instagram.png";
import Form from "@/components/Form.astro";
---

<header class="header">
  <div class="header__logo">
    <a href="https://rizdor.github.io/official/">
  
      
      <Image src={logo} alt="ロゴ" class="header__logo-image" />
    </a>
  </div>
  <div class="header__navbar">
    <div style="margin-right: 35px;">
    <Form />
  </div>
    <ul class="header__navbar-content">
      <li class="header__navbar-item">
        <a href="/official/blogpage" class="header__navbar-link">Blog</a>
      </li>
      <li class="header__navbar-item">
        <a href="/official/concert" class="header__navbar-link">Concert</a>
      </li>
    </ul>
    <ul class="header__sns">
      <li class="header__sns-item">
        <a href="https://twitter.com/ens_rizdor">
          <Image src={x} alt="x.comのアイコン" class="header__x" />
        </a>
      </li>
      <li class="header__sns-item">
        <a href="https://www.instagram.com/ens_rizdor">
          <Image
            src={instagram}
            alt="instagram.comのアイコン"
            class="header__instagram"
          />
        </a>
      </li>
      <li class="header__sns-item">
        <a href="https://www.youtube.com/@rizdor">
          <Image src={youtube} alt="Youtube.comのアイコン" class="header__youtube" />
        </a>
      </li>
    </ul>
  </div>

  <div class="header__inner">
    <button
      id="js-hamburger"
      type="button"
      class="header__hamburger"
      aria-controls="navigation"
      aria-expanded="false"
      aria-label="メニューを開く"
    >
      <span class="header__hamburger-line"></span>
      <span class="header__hamburger-text"></span>
    </button>
    <div class="header__overlay js-overlay"></div>
    <div class="header__nav-area js-nav-area" id="navigation">
      <nav id="js-global-navigation" class="header__navigation">
        <ul class="header__navigation-list">
          <li>
            <a href="/official/" class="header__navigation-link">HOME</a>
          </li>
          <li>
            <a href="/official/blogpage" class="header__navigation-link">BLOG</a>
          </li>
          <li>
            <a href="/official/concert" class="header__navigation-link">CONCERT</a
            >
          </li>
          <ul style="display: flex; justify-content: space-between;">
            <li class="header__navigation-link">SNS</li>
            <li>
              <a
                href="https://twitter.com/ens_rizdor"
                class="header__navigation-link"
                style="font-size: 5vw;text-decoration: underline;">X</a
              >
            </li>
            <li>
              <a
                href="https://www.instagram.com/ens_rizdor"
                class="header__navigation-link" style="font-size: 5vw;text-decoration: underline;">Instagram</a
              >
            </li>
          </ul>
        </ul>
        <div id="js-focus-trap" tabindex="0"></div>
      </nav>
    </div>
  </div>
</header>

<script>
const backgroundFix = (bool: boolean) => {
  const scrollingElement = (): HTMLElement => {
  return document.scrollingElement as HTMLElement || document.documentElement;
};

  const scrollY = bool
    ? scrollingElement().scrollTop
    : parseInt(document.body.style.top || "0");

  const fixedStyles: { [key: string]: string } = {
    height: "100vh",
    position: "fixed",
    top: `${scrollY * -1}px`,
    left: "0",
    width: "100vw",
  };

  Object.keys(fixedStyles).forEach((key) => {
    document.body.style[key as any] = bool ? fixedStyles[key] : "";
  });

  if (!bool) {
    window.scrollTo(0, scrollY * -1);
  }
};

const CLASS = "-active";
let flg = false;
let accordionFlg = false;

// 要素取得時のnullチェック
const hamburger = document.getElementById("js-hamburger");
const focusTrap = document.getElementById("js-focus-trap");
const menu = document.querySelector(".js-nav-area");
const accordionTrigger = document.querySelectorAll(".js-sp-accordion-trigger");
const overlay = document.querySelector(".js-overlay");

// 要素が存在する場合にのみイベントリスナーを登録
hamburger?.addEventListener("click", (e) => {
  const target = e.currentTarget as HTMLElement;
  target.classList.toggle(CLASS);
  menu?.classList.toggle(CLASS);
  overlay?.classList.toggle(CLASS);
  flg = !flg;
  backgroundFix(flg);
  hamburger.setAttribute("aria-expanded", String(flg));
  hamburger.focus();
});

window.addEventListener("keydown", (event) => {
  if (event.key === "Escape") {
    hamburger?.classList.remove(CLASS);
    menu?.classList.remove(CLASS);
    overlay?.classList.remove(CLASS);
    backgroundFix(false);
    hamburger?.focus();
    hamburger?.setAttribute("aria-expanded", "false");
    flg = false;
  }
});

overlay?.addEventListener("click", () => {
  hamburger?.classList.remove(CLASS);
  menu?.classList.remove(CLASS);
  overlay?.classList.remove(CLASS);
  backgroundFix(false);
  hamburger?.setAttribute("aria-expanded", "false");
  flg = false;
});

accordionTrigger.forEach((item) => {
  item.addEventListener("click", (e) => {
    const target = e.currentTarget as HTMLElement;
    target.classList.toggle(CLASS);
    target.nextElementSibling?.classList.toggle(CLASS);
    accordionFlg = !accordionFlg;
    target.setAttribute("aria-expanded", String(accordionFlg));
  });
});

focusTrap?.addEventListener("focus", () => {
  hamburger?.focus();
});

</script>
