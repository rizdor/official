---
import { getInvitation ,getInvitationDetail} from "../lib/microcms";
const response = await getInvitation({ fields: ["id","link" ,"onoff","message"] });
const { invitationId } = Astro.params;
const invitation = await getInvitationDetail(invitationId as string);
console.log(invitation)
---
{
  response.contents.slice(0, 1).map((invitation: any) => (
    invitation.onoff ? (  // onoffがtrueのときだけ表示
      <div class="form">
        <a class="form-a" href={invitation.link}>
          {invitation.message}
        </a>
      </div>
    ) : null  // onoffがfalseのときは何も表示しない
  ))
}

<style>
.form {
  z-index: 100;
  overflow: hidden;
  display: none;
  position: fixed;
  bottom: 20px; /* 画面下からの距離 */
  right: 20px;  /* 画面右からの距離 */
  width: 100px;
  height: 100px;
  background-color: #eac699;
  border-radius: 50%;
  text-align: center;
  border: 0.3px solid #73450d;
  transition: background-color 0.3s ease, transform 0.3s ease; /* 背景色とスムーズな変化 */
}

.form:hover {
  background-color: #d8b38c; /* ホバー時に背景色を変更 */
  transform: scale(1.05); /* 少し拡大して目立たせる */
}

.form a {
  color: #73450d;
  line-height: 100px;
  text-decoration: none; /* 下線を消す */
  font-size: small;
}

.form a:hover {
  color: #fff; /* ホバー時にリンクの色を変更 */
}

@media (max-width: 600px) {
.form{
  display: block;
}
}

</style>